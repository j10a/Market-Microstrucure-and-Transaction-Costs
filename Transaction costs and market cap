{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "nbbo = pd.read_csv('/Users/jeremyobadia/Desktop/MFin/MIT Fall Term/Financial Markets/Assignments/Assignment 4/equity transaction cost_data/nbbo_01oct2010.csv')\n",
    "trades = pd.read_csv('/Users/jeremyobadia/Desktop/MFin/MIT Fall Term/Financial Markets/Assignments/Assignment 4/equity transaction cost_data/trades_01oct2010.csv')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Formating the Data ##"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### We convert the time to seconds ####"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "nbbo['time']=nbbo['time']/10**3\n",
    "trades['Time']=trades['Time']/10**9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "34200.0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "9.5*3600"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "57600"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "16*3600"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>symbol</th>\n",
       "      <th>time</th>\n",
       "      <th>bid</th>\n",
       "      <th>ask</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>AA</td>\n",
       "      <td>14403.252</td>\n",
       "      <td>0.00</td>\n",
       "      <td>12.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>AA</td>\n",
       "      <td>14403.256</td>\n",
       "      <td>10.55</td>\n",
       "      <td>12.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>AA</td>\n",
       "      <td>14403.262</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>AA</td>\n",
       "      <td>14408.843</td>\n",
       "      <td>12.12</td>\n",
       "      <td>12.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>AA</td>\n",
       "      <td>14408.845</td>\n",
       "      <td>11.79</td>\n",
       "      <td>12.24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  symbol       time    bid    ask\n",
       "0     AA  14403.252   0.00  12.24\n",
       "1     AA  14403.256  10.55  12.24\n",
       "2     AA  14403.262  11.79  12.24\n",
       "3     AA  14408.843  12.12  12.24\n",
       "4     AA  14408.845  11.79  12.24"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nbbo.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "l=[]\n",
    "for i in range(0,len(nbbo)):\n",
    "    if nbbo['time'][i] < 9.5*3600:\n",
    "        l.append(i)\n",
    "    if nbbo['time'][i]>16*3600:\n",
    "        l.append(i)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "nbbo_trimmed =nbbo.drop(l)\n",
    "nbbo_trimmed= nbbo_trimmed.set_index('time')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>symbol</th>\n",
       "      <th>bid</th>\n",
       "      <th>ask</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>34204.638</td>\n",
       "      <td>AA</td>\n",
       "      <td>12.26</td>\n",
       "      <td>12.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34210.670</td>\n",
       "      <td>AA</td>\n",
       "      <td>12.26</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34214.310</td>\n",
       "      <td>AA</td>\n",
       "      <td>12.27</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34214.372</td>\n",
       "      <td>AA</td>\n",
       "      <td>12.28</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34217.644</td>\n",
       "      <td>AA</td>\n",
       "      <td>12.27</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          symbol    bid    ask\n",
       "time                          \n",
       "34204.638     AA  12.26  12.28\n",
       "34210.670     AA  12.26  12.29\n",
       "34214.310     AA  12.27  12.29\n",
       "34214.372     AA  12.28  12.29\n",
       "34217.644     AA  12.27  12.29"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nbbo_trimmed.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "d=[]\n",
    "for i in range(0,len(trades)):\n",
    "    if trades['Time'][i] < 9.5*3600:\n",
    "        d.append(i)\n",
    "    if trades['Time'][i]>16*3600:\n",
    "        d.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Symbol</th>\n",
       "      <th>Shares</th>\n",
       "      <th>BuySell</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>34200.226311</td>\n",
       "      <td>AA</td>\n",
       "      <td>145</td>\n",
       "      <td>B</td>\n",
       "      <td>12.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34200.320291</td>\n",
       "      <td>AA</td>\n",
       "      <td>750</td>\n",
       "      <td>B</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34210.669583</td>\n",
       "      <td>AA</td>\n",
       "      <td>100</td>\n",
       "      <td>B</td>\n",
       "      <td>12.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34214.319373</td>\n",
       "      <td>AA</td>\n",
       "      <td>289</td>\n",
       "      <td>B</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34214.319373</td>\n",
       "      <td>AA</td>\n",
       "      <td>211</td>\n",
       "      <td>B</td>\n",
       "      <td>12.29</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Symbol  Shares BuySell  Price\n",
       "Time                                      \n",
       "34200.226311     AA     145       B  12.24\n",
       "34200.320291     AA     750       B  12.29\n",
       "34210.669583     AA     100       B  12.28\n",
       "34214.319373     AA     289       B  12.29\n",
       "34214.319373     AA     211       B  12.29"
      ]
     },
     "execution_count": 218,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trades_trimmed = trades.drop(d)\n",
    "trades_trimmed = trades_trimmed.set_index('Time')\n",
    "trades_trimmed.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "set_trades = set(trades_trimmed['Symbol'])\n",
    "securities = list(set_trades)\n",
    "securities.sort()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Merging and sorting ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_sec= pd.DataFrame()\n",
    "for symbol in securities:\n",
    "    df= pd.concat([nbbo_trimmed.loc[nbbo_trimmed['symbol']==symbol], trades_trimmed.loc[trades_trimmed['Symbol']==symbol]], sort = False)\n",
    "\n",
    "    df_l= df.sort_index()\n",
    "\n",
    "    df_l.drop(['Symbol'], axis =1)\n",
    "\n",
    "    df_l['symbol'] =df_l['symbol'].fillna(value = symbol)\n",
    "    df_l['bid'] = df_l['bid'].fillna(method='ffill')\n",
    "    df_l['ask'] = df_l['ask'].fillna(method='ffill')\n",
    "    #print(df_l) optional print statement\n",
    "    df_sec = df_sec.append(df_l)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_sec = df_sec.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>symbol</th>\n",
       "      <th>bid</th>\n",
       "      <th>ask</th>\n",
       "      <th>Symbol</th>\n",
       "      <th>Shares</th>\n",
       "      <th>BuySell</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>57595.099585</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>B</td>\n",
       "      <td>33.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57597.241819</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>100.0</td>\n",
       "      <td>S</td>\n",
       "      <td>33.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57597.831231</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>6.0</td>\n",
       "      <td>S</td>\n",
       "      <td>33.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57598.023433</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>34.0</td>\n",
       "      <td>B</td>\n",
       "      <td>33.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57599.027753</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>100.0</td>\n",
       "      <td>S</td>\n",
       "      <td>33.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57599.087433</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>94.0</td>\n",
       "      <td>S</td>\n",
       "      <td>33.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57599.106000</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.45</td>\n",
       "      <td>33.47</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57599.335906</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.45</td>\n",
       "      <td>33.47</td>\n",
       "      <td>SWN</td>\n",
       "      <td>100.0</td>\n",
       "      <td>S</td>\n",
       "      <td>33.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57599.537000</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.46</td>\n",
       "      <td>33.47</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57599.562000</td>\n",
       "      <td>SWN</td>\n",
       "      <td>33.45</td>\n",
       "      <td>33.46</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             symbol    bid    ask Symbol  Shares BuySell  Price\n",
       "57595.099585    SWN  33.46  33.47    SWN     3.0       B  33.47\n",
       "57597.241819    SWN  33.46  33.47    SWN   100.0       S  33.46\n",
       "57597.831231    SWN  33.46  33.47    SWN     6.0       S  33.46\n",
       "57598.023433    SWN  33.46  33.47    SWN    34.0       B  33.47\n",
       "57599.027753    SWN  33.46  33.47    SWN   100.0       S  33.46\n",
       "57599.087433    SWN  33.46  33.47    SWN    94.0       S  33.46\n",
       "57599.106000    SWN  33.45  33.47      0     0.0       0   0.00\n",
       "57599.335906    SWN  33.45  33.47    SWN   100.0       S  33.45\n",
       "57599.537000    SWN  33.46  33.47      0     0.0       0   0.00\n",
       "57599.562000    SWN  33.45  33.46      0     0.0       0   0.00"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sec.tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Value-weighted transaction costs averages ##"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## May take some time to run ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "metadata": {},
   "outputs": [],
   "source": [
    "metrics = ['Buy Weights', 'Buy', 'Average Buy Transaction Cost in %', 'Sell Weights', 'Sell', 'Average Sell Transaction Cost in %']\n",
    "\n",
    "results = pd.DataFrame(index = metrics, columns =securities )\n",
    "\n",
    "for symbols in securities:\n",
    "    buy=[]\n",
    "    buy_weights= []\n",
    "    sell=[]\n",
    "    sell_weights=[]\n",
    "    \n",
    "    sec = df_sec.loc[df_sec['symbol'] == symbols].reset_index(drop=True)\n",
    "    sec_buy = sec[sec['BuySell']=='B'].reset_index(drop=True)\n",
    "    sec_sell = sec[sec['BuySell']=='S'].reset_index(drop=True)\n",
    "    \n",
    "    for i in range(0, len(sec_buy)):\n",
    "        if sec_buy['bid'][i]> 0:\n",
    "            a= sec_buy['bid'][i]\n",
    "            a = a.item()\n",
    "            b=sec_buy['ask'][i]\n",
    "            b = b.item()\n",
    "            c = [a,b]\n",
    "            mean_buy = np.mean(c)\n",
    "            buy.append((sec_buy['Price'][i]-mean_buy)/mean_buy*sec_buy['Shares'][i])\n",
    "            buy_weights.append(sec_buy['Shares'][i])\n",
    "            \n",
    "    \n",
    "    for y in range(0, len(sec_sell)):\n",
    "        if sec_sell['bid'][y]> 0:\n",
    "            a= sec_sell['bid'][y]\n",
    "            a = a.item()\n",
    "            b=sec_sell['ask'][y]\n",
    "            b = b.item()\n",
    "            c = [a,b]\n",
    "            mean_sell = np.mean(c)\n",
    "            sell.append((mean_sell-sec_sell['Price'][y])/mean_sell*sec_sell['Shares'][y])\n",
    "            sell_weights.append(sec_sell['Shares'][y])\n",
    "    \n",
    "    results[symbols]['Buy Weights'] = buy_weights\n",
    "    results[symbols]['Sell Weights'] = sell_weights\n",
    "    results[symbols]['Buy'] = buy\n",
    "    results[symbols]['Sell'] = sell\n",
    "    results[symbols]['Average Buy Transaction Cost in %']= np.round(sum(buy)/sum(buy_weights)*100, decimals=3)\n",
    "    results[symbols]['Average Sell Transaction Cost in %']= np.round(sum(sell)/sum(sell_weights)*100, decimals=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AA</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>ABD</th>\n",
       "      <th>ADBE</th>\n",
       "      <th>AGN</th>\n",
       "      <th>AINV</th>\n",
       "      <th>AMAT</th>\n",
       "      <th>AMED</th>\n",
       "      <th>AMGN</th>\n",
       "      <th>AMZN</th>\n",
       "      <th>...</th>\n",
       "      <th>PTP</th>\n",
       "      <th>RIGL</th>\n",
       "      <th>ROC</th>\n",
       "      <th>ROCK</th>\n",
       "      <th>ROG</th>\n",
       "      <th>RVI</th>\n",
       "      <th>SF</th>\n",
       "      <th>SFG</th>\n",
       "      <th>SJW</th>\n",
       "      <th>SWN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Buy Weights</td>\n",
       "      <td>[100.0, 211.0, 289.0, 500.0, 100.0, 100.0, 100...</td>\n",
       "      <td>[100.0, 300.0, 100.0, 100.0, 100.0, 100.0, 20....</td>\n",
       "      <td>[7.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0...</td>\n",
       "      <td>[100.0, 100.0, 32.0, 100.0, 50.0, 18.0, 18.0, ...</td>\n",
       "      <td>[25.0, 4.0, 100.0, 33.0, 100.0, 10.0, 90.0, 20...</td>\n",
       "      <td>[45.0, 100.0, 200.0, 200.0, 100.0, 100.0, 100....</td>\n",
       "      <td>[100.0, 100.0, 57.0, 200.0, 43.0, 200.0, 900.0...</td>\n",
       "      <td>[200.0, 100.0, 100.0, 100.0, 1.0, 4.0, 4.0, 96...</td>\n",
       "      <td>[7.0, 7.0, 93.0, 107.0, 93.0, 200.0, 100.0, 81...</td>\n",
       "      <td>[100.0, 100.0, 300.0, 100.0, 100.0, 100.0, 200...</td>\n",
       "      <td>...</td>\n",
       "      <td>[100.0, 100.0, 100.0, 100.0, 100.0, 19.0, 100....</td>\n",
       "      <td>[100.0, 100.0, 200.0, 100.0, 100.0, 100.0, 100...</td>\n",
       "      <td>[276.0, 100.0, 100.0, 5.0, 95.0, 5.0, 100.0, 8...</td>\n",
       "      <td>[18.0, 72.0, 28.0, 28.0, 100.0, 79.0, 200.0, 3...</td>\n",
       "      <td>[40.0, 100.0, 100.0, 37.0, 4.0, 1.0, 1.0, 100....</td>\n",
       "      <td>[100.0, 200.0, 32.0, 10.0, 80.0, 10.0, 100.0, ...</td>\n",
       "      <td>[100.0, 100.0, 100.0, 65.0, 35.0, 100.0, 100.0...</td>\n",
       "      <td>[100.0, 100.0, 1.0, 199.0, 100.0, 100.0, 100.0...</td>\n",
       "      <td>[8.0, 58.0, 1.0, 99.0, 1.0, 100.0, 53.0, 100.0...</td>\n",
       "      <td>[200.0, 300.0, 1300.0, 400.0, 21.0, 2.0, 79.0,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Buy</td>\n",
       "      <td>[0.08149959250203576, 0.17182410423452404, 0.2...</td>\n",
       "      <td>[0.04890658841612043, 0.1100263714001483, 0.04...</td>\n",
       "      <td>[0.01802575107296206, 0.08628127696289721, -0....</td>\n",
       "      <td>[0.03800836183959715, 0.03800836183959715, 0.0...</td>\n",
       "      <td>[0.0168425780372842, 0.001500487658488497, 0.0...</td>\n",
       "      <td>[0.13056092843326608, 0.19323671497582412, 0.5...</td>\n",
       "      <td>[0.21285653469560306, 0.1700680272108807, 0.09...</td>\n",
       "      <td>[-0.20916126333404833, -0.10458063166702417, -...</td>\n",
       "      <td>[0.0, 0.0012598992080631042, 0.016738660907124...</td>\n",
       "      <td>[0.03186743148502956, 0.03186743148502956, 0.0...</td>\n",
       "      <td>...</td>\n",
       "      <td>[0.39342744735015434, 0.1967820349577517, 0.18...</td>\n",
       "      <td>[0.05991611743559954, 0.05991611743559954, 0.1...</td>\n",
       "      <td>[-0.347279018559288, 0.2214489085732372, 0.110...</td>\n",
       "      <td>[0.04942339373970416, 0.07991120976692394, 0.0...</td>\n",
       "      <td>[0.13238770685578802, 0.36191974822974665, 0.2...</td>\n",
       "      <td>[0.5514705882352824, 0.0, 0.03004694835680687,...</td>\n",
       "      <td>[0.07465074117520867, 0.10702054794521461, 0.1...</td>\n",
       "      <td>[0.14388489208633018, 0.0649772579597104, 0.00...</td>\n",
       "      <td>[0.022544283413847576, 0.10655235762400052, -0...</td>\n",
       "      <td>[0.1768867924528369, 0.26533018867925534, 1.14...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Average Buy Transaction Cost in %</td>\n",
       "      <td>0.034</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.079</td>\n",
       "      <td>0.014</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.021</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.013</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.006</td>\n",
       "      <td>...</td>\n",
       "      <td>0.018</td>\n",
       "      <td>0.032</td>\n",
       "      <td>0.027</td>\n",
       "      <td>0.065</td>\n",
       "      <td>0.108</td>\n",
       "      <td>0.061</td>\n",
       "      <td>0.035</td>\n",
       "      <td>0.025</td>\n",
       "      <td>0.054</td>\n",
       "      <td>0.016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Sell Weights</td>\n",
       "      <td>[100.0, 100.0, 100.0, 200.0, 100.0, 100.0, 100...</td>\n",
       "      <td>[300.0, 100.0, 200.0, 100.0, 100.0, 100.0, 30....</td>\n",
       "      <td>[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 400...</td>\n",
       "      <td>[200.0, 100.0, 69.0, 120.0, 219.0, 60.0, 81.0,...</td>\n",
       "      <td>[2.0, 35.0, 100.0, 24.0, 100.0, 6.0, 15.0, 100...</td>\n",
       "      <td>[2.0, 8.0, 2.0, 2.0, 98.0, 64.0, 191.0, 100.0,...</td>\n",
       "      <td>[100.0, 100.0, 95.0, 100.0, 100.0, 100.0, 100....</td>\n",
       "      <td>[1.0, 100.0, 100.0, 100.0, 15.0, 100.0, 35.0, ...</td>\n",
       "      <td>[100.0, 100.0, 100.0, 100.0, 19.0, 1.0, 100.0,...</td>\n",
       "      <td>[100.0, 20.0, 80.0, 35.0, 65.0, 6.0, 50.0, 28....</td>\n",
       "      <td>...</td>\n",
       "      <td>[25.0, 100.0, 30.0, 70.0, 30.0, 170.0, 100.0, ...</td>\n",
       "      <td>[18.0, 1.0, 20.0, 100.0, 100.0, 6.0, 100.0, 6....</td>\n",
       "      <td>[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100...</td>\n",
       "      <td>[2.0, 10.0, 100.0, 90.0, 100.0, 100.0, 70.0, 2...</td>\n",
       "      <td>[22.0, 100.0, 200.0, 100.0, 51.0, 200.0, 100.0...</td>\n",
       "      <td>[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100...</td>\n",
       "      <td>[100.0, 1.0, 96.0, 100.0, 81.0, 16.0, 3.0, 19....</td>\n",
       "      <td>[18.0, 12.0, 12.0, 100.0, 50.0, 50.0, 100.0, 1...</td>\n",
       "      <td>[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100...</td>\n",
       "      <td>[15.0, 70.0, 30.0, 100.0, 70.0, 40.0, 100.0, 4...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Sell</td>\n",
       "      <td>[0.04070004070004706, 0.04070004070004706, 0.0...</td>\n",
       "      <td>[-0.020959966464034595, 0.0, 0.010479434110548...</td>\n",
       "      <td>[0.1721170395869307, 0.1721170395869307, 0.0, ...</td>\n",
       "      <td>[-0.1902225603956521, -0.09511128019782605, 0....</td>\n",
       "      <td>[-0.000896995066527168, 0.08113362745831955, 0...</td>\n",
       "      <td>[3.4325736027057975e-16, -0.003866602223295509...</td>\n",
       "      <td>[-0.3407155025553742, -0.04257130693911456, 0....</td>\n",
       "      <td>[0.0, 0.020995171110640375, 0.0209951711106403...</td>\n",
       "      <td>[0.035990642432973056, 0.035990642432973056, 0...</td>\n",
       "      <td>[-0.025493945188030893, -0.005736320469105571,...</td>\n",
       "      <td>...</td>\n",
       "      <td>[-0.06652782598634437, 0.13879250520470776, 0....</td>\n",
       "      <td>[3.797437423896022e-15, -0.0035629453681707336...</td>\n",
       "      <td>[-1.1230326153945e-14, 0.0, 0.0, -0.0157282164...</td>\n",
       "      <td>[0.015401540154015464, 0.06607929515418556, -0...</td>\n",
       "      <td>[-0.07614852108244138, 0.1266624445851778, 0.4...</td>\n",
       "      <td>[0.0, 0.04618937644340883, 0.04618937644340883...</td>\n",
       "      <td>[0.042716787697571826, 0.0011730830756105303, ...</td>\n",
       "      <td>[0.03061625016355062, 0.04712041884816932, 0.0...</td>\n",
       "      <td>[0.22075055187637857, -0.0201328769881176, 0.2...</td>\n",
       "      <td>[-0.0066499187232158564, 0.051584377302871055,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Average Sell Transaction Cost in %</td>\n",
       "      <td>0.031</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.096</td>\n",
       "      <td>0.013</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.021</td>\n",
       "      <td>0.032</td>\n",
       "      <td>0.022</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.007</td>\n",
       "      <td>...</td>\n",
       "      <td>0.017</td>\n",
       "      <td>0.051</td>\n",
       "      <td>0.024</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.119</td>\n",
       "      <td>0.086</td>\n",
       "      <td>0.039</td>\n",
       "      <td>0.024</td>\n",
       "      <td>0.118</td>\n",
       "      <td>0.016</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6 rows × 117 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                   AA  \\\n",
       "Buy Weights                         [100.0, 211.0, 289.0, 500.0, 100.0, 100.0, 100...   \n",
       "Buy                                 [0.08149959250203576, 0.17182410423452404, 0.2...   \n",
       "Average Buy Transaction Cost in %                                               0.034   \n",
       "Sell Weights                        [100.0, 100.0, 100.0, 200.0, 100.0, 100.0, 100...   \n",
       "Sell                                [0.04070004070004706, 0.04070004070004706, 0.0...   \n",
       "Average Sell Transaction Cost in %                                              0.031   \n",
       "\n",
       "                                                                                 AAPL  \\\n",
       "Buy Weights                         [100.0, 300.0, 100.0, 100.0, 100.0, 100.0, 20....   \n",
       "Buy                                 [0.04890658841612043, 0.1100263714001483, 0.04...   \n",
       "Average Buy Transaction Cost in %                                               0.004   \n",
       "Sell Weights                        [300.0, 100.0, 200.0, 100.0, 100.0, 100.0, 30....   \n",
       "Sell                                [-0.020959966464034595, 0.0, 0.010479434110548...   \n",
       "Average Sell Transaction Cost in %                                              0.004   \n",
       "\n",
       "                                                                                  ABD  \\\n",
       "Buy Weights                         [7.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0...   \n",
       "Buy                                 [0.01802575107296206, 0.08628127696289721, -0....   \n",
       "Average Buy Transaction Cost in %                                               0.079   \n",
       "Sell Weights                        [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 400...   \n",
       "Sell                                [0.1721170395869307, 0.1721170395869307, 0.0, ...   \n",
       "Average Sell Transaction Cost in %                                              0.096   \n",
       "\n",
       "                                                                                 ADBE  \\\n",
       "Buy Weights                         [100.0, 100.0, 32.0, 100.0, 50.0, 18.0, 18.0, ...   \n",
       "Buy                                 [0.03800836183959715, 0.03800836183959715, 0.0...   \n",
       "Average Buy Transaction Cost in %                                               0.014   \n",
       "Sell Weights                        [200.0, 100.0, 69.0, 120.0, 219.0, 60.0, 81.0,...   \n",
       "Sell                                [-0.1902225603956521, -0.09511128019782605, 0....   \n",
       "Average Sell Transaction Cost in %                                              0.013   \n",
       "\n",
       "                                                                                  AGN  \\\n",
       "Buy Weights                         [25.0, 4.0, 100.0, 33.0, 100.0, 10.0, 90.0, 20...   \n",
       "Buy                                 [0.0168425780372842, 0.001500487658488497, 0.0...   \n",
       "Average Buy Transaction Cost in %                                                0.01   \n",
       "Sell Weights                        [2.0, 35.0, 100.0, 24.0, 100.0, 6.0, 15.0, 100...   \n",
       "Sell                                [-0.000896995066527168, 0.08113362745831955, 0...   \n",
       "Average Sell Transaction Cost in %                                               0.01   \n",
       "\n",
       "                                                                                 AINV  \\\n",
       "Buy Weights                         [45.0, 100.0, 200.0, 200.0, 100.0, 100.0, 100....   \n",
       "Buy                                 [0.13056092843326608, 0.19323671497582412, 0.5...   \n",
       "Average Buy Transaction Cost in %                                               0.021   \n",
       "Sell Weights                        [2.0, 8.0, 2.0, 2.0, 98.0, 64.0, 191.0, 100.0,...   \n",
       "Sell                                [3.4325736027057975e-16, -0.003866602223295509...   \n",
       "Average Sell Transaction Cost in %                                              0.021   \n",
       "\n",
       "                                                                                 AMAT  \\\n",
       "Buy Weights                         [100.0, 100.0, 57.0, 200.0, 43.0, 200.0, 900.0...   \n",
       "Buy                                 [0.21285653469560306, 0.1700680272108807, 0.09...   \n",
       "Average Buy Transaction Cost in %                                                0.03   \n",
       "Sell Weights                        [100.0, 100.0, 95.0, 100.0, 100.0, 100.0, 100....   \n",
       "Sell                                [-0.3407155025553742, -0.04257130693911456, 0....   \n",
       "Average Sell Transaction Cost in %                                              0.032   \n",
       "\n",
       "                                                                                 AMED  \\\n",
       "Buy Weights                         [200.0, 100.0, 100.0, 100.0, 1.0, 4.0, 4.0, 96...   \n",
       "Buy                                 [-0.20916126333404833, -0.10458063166702417, -...   \n",
       "Average Buy Transaction Cost in %                                               0.013   \n",
       "Sell Weights                        [1.0, 100.0, 100.0, 100.0, 15.0, 100.0, 35.0, ...   \n",
       "Sell                                [0.0, 0.020995171110640375, 0.0209951711106403...   \n",
       "Average Sell Transaction Cost in %                                              0.022   \n",
       "\n",
       "                                                                                 AMGN  \\\n",
       "Buy Weights                         [7.0, 7.0, 93.0, 107.0, 93.0, 200.0, 100.0, 81...   \n",
       "Buy                                 [0.0, 0.0012598992080631042, 0.016738660907124...   \n",
       "Average Buy Transaction Cost in %                                               0.004   \n",
       "Sell Weights                        [100.0, 100.0, 100.0, 100.0, 19.0, 1.0, 100.0,...   \n",
       "Sell                                [0.035990642432973056, 0.035990642432973056, 0...   \n",
       "Average Sell Transaction Cost in %                                              0.005   \n",
       "\n",
       "                                                                                 AMZN  \\\n",
       "Buy Weights                         [100.0, 100.0, 300.0, 100.0, 100.0, 100.0, 200...   \n",
       "Buy                                 [0.03186743148502956, 0.03186743148502956, 0.0...   \n",
       "Average Buy Transaction Cost in %                                               0.006   \n",
       "Sell Weights                        [100.0, 20.0, 80.0, 35.0, 65.0, 6.0, 50.0, 28....   \n",
       "Sell                                [-0.025493945188030893, -0.005736320469105571,...   \n",
       "Average Sell Transaction Cost in %                                              0.007   \n",
       "\n",
       "                                    ...  \\\n",
       "Buy Weights                         ...   \n",
       "Buy                                 ...   \n",
       "Average Buy Transaction Cost in %   ...   \n",
       "Sell Weights                        ...   \n",
       "Sell                                ...   \n",
       "Average Sell Transaction Cost in %  ...   \n",
       "\n",
       "                                                                                  PTP  \\\n",
       "Buy Weights                         [100.0, 100.0, 100.0, 100.0, 100.0, 19.0, 100....   \n",
       "Buy                                 [0.39342744735015434, 0.1967820349577517, 0.18...   \n",
       "Average Buy Transaction Cost in %                                               0.018   \n",
       "Sell Weights                        [25.0, 100.0, 30.0, 70.0, 30.0, 170.0, 100.0, ...   \n",
       "Sell                                [-0.06652782598634437, 0.13879250520470776, 0....   \n",
       "Average Sell Transaction Cost in %                                              0.017   \n",
       "\n",
       "                                                                                 RIGL  \\\n",
       "Buy Weights                         [100.0, 100.0, 200.0, 100.0, 100.0, 100.0, 100...   \n",
       "Buy                                 [0.05991611743559954, 0.05991611743559954, 0.1...   \n",
       "Average Buy Transaction Cost in %                                               0.032   \n",
       "Sell Weights                        [18.0, 1.0, 20.0, 100.0, 100.0, 6.0, 100.0, 6....   \n",
       "Sell                                [3.797437423896022e-15, -0.0035629453681707336...   \n",
       "Average Sell Transaction Cost in %                                              0.051   \n",
       "\n",
       "                                                                                  ROC  \\\n",
       "Buy Weights                         [276.0, 100.0, 100.0, 5.0, 95.0, 5.0, 100.0, 8...   \n",
       "Buy                                 [-0.347279018559288, 0.2214489085732372, 0.110...   \n",
       "Average Buy Transaction Cost in %                                               0.027   \n",
       "Sell Weights                        [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100...   \n",
       "Sell                                [-1.1230326153945e-14, 0.0, 0.0, -0.0157282164...   \n",
       "Average Sell Transaction Cost in %                                              0.024   \n",
       "\n",
       "                                                                                 ROCK  \\\n",
       "Buy Weights                         [18.0, 72.0, 28.0, 28.0, 100.0, 79.0, 200.0, 3...   \n",
       "Buy                                 [0.04942339373970416, 0.07991120976692394, 0.0...   \n",
       "Average Buy Transaction Cost in %                                               0.065   \n",
       "Sell Weights                        [2.0, 10.0, 100.0, 90.0, 100.0, 100.0, 70.0, 2...   \n",
       "Sell                                [0.015401540154015464, 0.06607929515418556, -0...   \n",
       "Average Sell Transaction Cost in %                                               0.09   \n",
       "\n",
       "                                                                                  ROG  \\\n",
       "Buy Weights                         [40.0, 100.0, 100.0, 37.0, 4.0, 1.0, 1.0, 100....   \n",
       "Buy                                 [0.13238770685578802, 0.36191974822974665, 0.2...   \n",
       "Average Buy Transaction Cost in %                                               0.108   \n",
       "Sell Weights                        [22.0, 100.0, 200.0, 100.0, 51.0, 200.0, 100.0...   \n",
       "Sell                                [-0.07614852108244138, 0.1266624445851778, 0.4...   \n",
       "Average Sell Transaction Cost in %                                              0.119   \n",
       "\n",
       "                                                                                  RVI  \\\n",
       "Buy Weights                         [100.0, 200.0, 32.0, 10.0, 80.0, 10.0, 100.0, ...   \n",
       "Buy                                 [0.5514705882352824, 0.0, 0.03004694835680687,...   \n",
       "Average Buy Transaction Cost in %                                               0.061   \n",
       "Sell Weights                        [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100...   \n",
       "Sell                                [0.0, 0.04618937644340883, 0.04618937644340883...   \n",
       "Average Sell Transaction Cost in %                                              0.086   \n",
       "\n",
       "                                                                                   SF  \\\n",
       "Buy Weights                         [100.0, 100.0, 100.0, 65.0, 35.0, 100.0, 100.0...   \n",
       "Buy                                 [0.07465074117520867, 0.10702054794521461, 0.1...   \n",
       "Average Buy Transaction Cost in %                                               0.035   \n",
       "Sell Weights                        [100.0, 1.0, 96.0, 100.0, 81.0, 16.0, 3.0, 19....   \n",
       "Sell                                [0.042716787697571826, 0.0011730830756105303, ...   \n",
       "Average Sell Transaction Cost in %                                              0.039   \n",
       "\n",
       "                                                                                  SFG  \\\n",
       "Buy Weights                         [100.0, 100.0, 1.0, 199.0, 100.0, 100.0, 100.0...   \n",
       "Buy                                 [0.14388489208633018, 0.0649772579597104, 0.00...   \n",
       "Average Buy Transaction Cost in %                                               0.025   \n",
       "Sell Weights                        [18.0, 12.0, 12.0, 100.0, 50.0, 50.0, 100.0, 1...   \n",
       "Sell                                [0.03061625016355062, 0.04712041884816932, 0.0...   \n",
       "Average Sell Transaction Cost in %                                              0.024   \n",
       "\n",
       "                                                                                  SJW  \\\n",
       "Buy Weights                         [8.0, 58.0, 1.0, 99.0, 1.0, 100.0, 53.0, 100.0...   \n",
       "Buy                                 [0.022544283413847576, 0.10655235762400052, -0...   \n",
       "Average Buy Transaction Cost in %                                               0.054   \n",
       "Sell Weights                        [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100...   \n",
       "Sell                                [0.22075055187637857, -0.0201328769881176, 0.2...   \n",
       "Average Sell Transaction Cost in %                                              0.118   \n",
       "\n",
       "                                                                                  SWN  \n",
       "Buy Weights                         [200.0, 300.0, 1300.0, 400.0, 21.0, 2.0, 79.0,...  \n",
       "Buy                                 [0.1768867924528369, 0.26533018867925534, 1.14...  \n",
       "Average Buy Transaction Cost in %                                               0.016  \n",
       "Sell Weights                        [15.0, 70.0, 30.0, 100.0, 70.0, 40.0, 100.0, 4...  \n",
       "Sell                                [-0.0066499187232158564, 0.051584377302871055,...  \n",
       "Average Sell Transaction Cost in %                                              0.016  \n",
       "\n",
       "[6 rows x 117 columns]"
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Formatting of Market Cap DataFrame ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mktcap</th>\n",
       "      <th>log_mktcap</th>\n",
       "      <th>Buy_Transaction_Cost</th>\n",
       "      <th>Sell_Transaction_Cost</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>symbol</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>AA</td>\n",
       "      <td>1.236690e+10</td>\n",
       "      <td>23.238290</td>\n",
       "      <td>0.0336502</td>\n",
       "      <td>0.0312541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>AAPL</td>\n",
       "      <td>2.600000e+11</td>\n",
       "      <td>26.283947</td>\n",
       "      <td>0.00401789</td>\n",
       "      <td>0.00435245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>ABD</td>\n",
       "      <td>3.155255e+08</td>\n",
       "      <td>19.569750</td>\n",
       "      <td>0.0793679</td>\n",
       "      <td>0.0959708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>ADBE</td>\n",
       "      <td>1.366748e+10</td>\n",
       "      <td>23.338285</td>\n",
       "      <td>0.0139032</td>\n",
       "      <td>0.0127349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>AGN</td>\n",
       "      <td>2.045877e+10</td>\n",
       "      <td>23.741678</td>\n",
       "      <td>0.0100481</td>\n",
       "      <td>0.0103801</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              mktcap  log_mktcap Buy_Transaction_Cost Sell_Transaction_Cost\n",
       "symbol                                                                     \n",
       "AA      1.236690e+10   23.238290            0.0336502             0.0312541\n",
       "AAPL    2.600000e+11   26.283947           0.00401789            0.00435245\n",
       "ABD     3.155255e+08   19.569750            0.0793679             0.0959708\n",
       "ADBE    1.366748e+10   23.338285            0.0139032             0.0127349\n",
       "AGN     2.045877e+10   23.741678            0.0100481             0.0103801"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mktcap = pd.read_csv('/Users/jeremyobadia/Desktop/MFin/MIT Fall Term/Financial Markets/Assignments/Assignment 4/equity transaction cost_data/mktcap.csv')\n",
    "mktcap['log_mktcap'] = np.log(mktcap['mktcap'])\n",
    "mktcap['Buy_Transaction_Cost']=results[2:3].values[0]\n",
    "mktcap['Sell_Transaction_Cost'] = results[5:].values[0]\n",
    "mktcap = mktcap.set_index('symbol')\n",
    "mktcap.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Regressions ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Applications/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:2389: FutureWarning: Method .ptp is deprecated and will be removed in a future version. Use numpy.ptp instead.\n",
      "  return ptp(axis=axis, out=out, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>    <td>Buy_Transaction_Cost</td> <th>  R-squared:         </th> <td>   0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                     <td>OLS</td>         <th>  Adj. R-squared:    </th> <td>   0.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>               <td>Least Squares</td>    <th>  F-statistic:       </th> <td>   59.29</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>               <td>Mon, 30 Sep 2019</td>   <th>  Prob (F-statistic):</th> <td>5.18e-12</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                   <td>17:13:50</td>       <th>  Log-Likelihood:    </th> <td>  271.45</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>        <td>   117</td>        <th>  AIC:               </th> <td>  -538.9</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>            <td>   115</td>        <th>  BIC:               </th> <td>  -533.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>                <td>     1</td>        <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>           <td>HC1</td>         <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>      <td>    0.2305</td> <td>    0.027</td> <td>    8.447</td> <td> 0.000</td> <td>    0.177</td> <td>    0.284</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_mktcap</th> <td>   -0.0091</td> <td>    0.001</td> <td>   -7.700</td> <td> 0.000</td> <td>   -0.011</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>61.269</td> <th>  Durbin-Watson:     </th> <td>   1.779</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 233.768</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 1.861</td> <th>  Prob(JB):          </th> <td>1.73e-51</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 8.839</td> <th>  Cond. No.          </th> <td>    256.</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors are heteroscedasticity robust (HC1)"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                             OLS Regression Results                             \n",
       "================================================================================\n",
       "Dep. Variable:     Buy_Transaction_Cost   R-squared:                       0.342\n",
       "Model:                              OLS   Adj. R-squared:                  0.336\n",
       "Method:                   Least Squares   F-statistic:                     59.29\n",
       "Date:                  Mon, 30 Sep 2019   Prob (F-statistic):           5.18e-12\n",
       "Time:                          17:13:50   Log-Likelihood:                 271.45\n",
       "No. Observations:                   117   AIC:                            -538.9\n",
       "Df Residuals:                       115   BIC:                            -533.4\n",
       "Df Model:                             1                                         \n",
       "Covariance Type:                    HC1                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.2305      0.027      8.447      0.000       0.177       0.284\n",
       "log_mktcap    -0.0091      0.001     -7.700      0.000      -0.011      -0.007\n",
       "==============================================================================\n",
       "Omnibus:                       61.269   Durbin-Watson:                   1.779\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              233.768\n",
       "Skew:                           1.861   Prob(JB):                     1.73e-51\n",
       "Kurtosis:                       8.839   Cond. No.                         256.\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors are heteroscedasticity robust (HC1)\n",
       "\"\"\""
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_buy= mktcap['Buy_Transaction_Cost'].astype(float)\n",
    "X_buy = mktcap['log_mktcap'].astype(float)\n",
    "X_buy = sm.add_constant(X_buy)\n",
    "model_buy = sm.OLS(Y_buy, X_buy).fit(cov_type='HC1')\n",
    "model_buy.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x14edb7828>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x='log_mktcap', y='Buy_Transaction_Cost', data=mktcap)\n",
    "plt.title('OLS regression between log market cap and buyer-initiated transaction costs')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Applications/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:2389: FutureWarning: Method .ptp is deprecated and will be removed in a future version. Use numpy.ptp instead.\n",
      "  return ptp(axis=axis, out=out, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>    <td>Sell_Transaction_Cost</td> <th>  R-squared:         </th> <td>   0.358</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                     <td>OLS</td>          <th>  Adj. R-squared:    </th> <td>   0.352</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>               <td>Least Squares</td>     <th>  F-statistic:       </th> <td>   64.80</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>               <td>Mon, 30 Sep 2019</td>    <th>  Prob (F-statistic):</th> <td>8.44e-13</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                   <td>17:13:56</td>        <th>  Log-Likelihood:    </th> <td>  270.12</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>        <td>   117</td>         <th>  AIC:               </th> <td>  -536.2</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>            <td>   115</td>         <th>  BIC:               </th> <td>  -530.7</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>                <td>     1</td>         <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>           <td>HC1</td>          <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>      <td>    0.2409</td> <td>    0.027</td> <td>    8.818</td> <td> 0.000</td> <td>    0.187</td> <td>    0.294</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_mktcap</th> <td>   -0.0095</td> <td>    0.001</td> <td>   -8.050</td> <td> 0.000</td> <td>   -0.012</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>46.676</td> <th>  Durbin-Watson:     </th> <td>   1.795</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 126.977</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 1.504</td> <th>  Prob(JB):          </th> <td>2.68e-28</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 7.123</td> <th>  Cond. No.          </th> <td>    256.</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors are heteroscedasticity robust (HC1)"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              OLS Regression Results                             \n",
       "=================================================================================\n",
       "Dep. Variable:     Sell_Transaction_Cost   R-squared:                       0.358\n",
       "Model:                               OLS   Adj. R-squared:                  0.352\n",
       "Method:                    Least Squares   F-statistic:                     64.80\n",
       "Date:                   Mon, 30 Sep 2019   Prob (F-statistic):           8.44e-13\n",
       "Time:                           17:13:56   Log-Likelihood:                 270.12\n",
       "No. Observations:                    117   AIC:                            -536.2\n",
       "Df Residuals:                        115   BIC:                            -530.7\n",
       "Df Model:                              1                                         \n",
       "Covariance Type:                     HC1                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.2409      0.027      8.818      0.000       0.187       0.294\n",
       "log_mktcap    -0.0095      0.001     -8.050      0.000      -0.012      -0.007\n",
       "==============================================================================\n",
       "Omnibus:                       46.676   Durbin-Watson:                   1.795\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              126.977\n",
       "Skew:                           1.504   Prob(JB):                     2.68e-28\n",
       "Kurtosis:                       7.123   Cond. No.                         256.\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors are heteroscedasticity robust (HC1)\n",
       "\"\"\""
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_sell= mktcap['Sell_Transaction_Cost'].astype(float)\n",
    "X_sell = mktcap['log_mktcap'].astype(float)\n",
    "X_sell = sm.add_constant(X_sell)\n",
    "model_sell = sm.OLS(Y_sell, X_sell).fit(cov_type='HC1')\n",
    "\n",
    "model_sell.summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x15b034d68>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x='log_mktcap', y='Sell_Transaction_Cost', data=mktcap)\n",
    "plt.title('OLS regression between log market cap and seller-initiated transaction costs')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
